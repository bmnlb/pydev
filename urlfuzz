#!/usr/bin/env python3
'''
Just a crappy/fun little fuzzer to help familiarize
myself with the requests module.
"Http requests for humans"

TODO:	- Add performance timer.
		- Various code clean-up, including better
		  parsing and processing of args.
		- Better fuzzing techniques. Encapsulate in functions.
		- Fix/enhance the http requests.

Authored by brianc2788@gmail.com
http://github.com/user5260/pyscripts/FUZZ&FUZ2Z (jokes)
'''
import sys,requests

# Handle args #
if len(sys.argv) == 1:
	print('Usage: >$ urlfuzz <url>')
	print("Enter <url> in the form 'protocol://host.tld/")
	print('Be sure to include a trailing forward slash (/).')
else:
	base_url = sys.argv[1]

def main():
	try:
		# Preliminary request #
		r = requests.get(base_url)

		if r.status_code != requests.codes.ok:
			print(r.status_code)
			sys.exit(0)
		else:
			print('Starting fuzzer.\nTarget URL: {0}\nCtrl+C to cancel...'.format(base_url))
			print('-------------------')

		# Fuzzer loop #
		for n in range(99999):
			req = requests.get(base_url+str(n),timeout=1.0) #something wrong w/timeout?

			if req.status_code == requests.codes.ok:
				print('{0}{1} - Code {2}'.format(req.url,n,req.status_code))

	# Handle exceptions (or don't) #
	except:
		if KeyboardInterrupt:
			print('Fuzz aborted by the user.') #sometimes requests fails here.
			sys.exit(0)
		else:
			print('An error has occurred.')
			sys.exit(1)
	sys.exit(0)

if __name__ == '__main__':
	main()
