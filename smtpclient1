#!/usr/bin/env python3
'''
smtp-mailer - Python 3.9
-----------
send an email over the command line.
leverages smtp tech.

for now, only sends simple, one-line
messages of text.
'''
import sys,smtplib

# copy args to a list; strip out first arg (cmd name).
argList = sys.argv[1:]

if len(argList) < 3:
    print('Usage: ./smtp-mailer <src_address> <src_passw> <dst_addr>')
    quit()
else:
    src_addr = argList[0]
    src_passw = argList[1]
    dst_addr = argList[2]

    sMsg = 'Subject: -Sent from smtp-mailer app!\n'

    print('Composing email to '+dst_addr+'\nEnter:\n')

    # loop to compose e-mail.
    # ends when the final char in a string is
    # a period.
    # I.e., stops getting input for sMsg when final
    # char in the string is '.'

    bMsgDone = False

    while not bMsgDone:
        sMsg += input()
        if sMsg[(len(sMsg)-1)] == '.':
            bMsgDone = True
        else:
            sMsg += ('\n')
            continue

    print('\nGot Msg\nContacting gmail smtp servers...\n')


#TODO: code this stuff...
    try:
        smtpObj = smtplib.SMTP('smtp.gmail.com',587)
        smtpObj.ehlo()
        print('got server response 250 (OK)')
        smtpObj.starttls()
        print('TLS encryption started successfully.')
        smtpObj.login(src_addr,src_passw)
        print('login successful.')
        smtpObj.sendmail(src_addr,dst_addr,sMsg)
        print('mail sent.')
    except e:
        quit()

print('\nExiting...\n')