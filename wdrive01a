#!/usr/bin/env python3
'''
wdrive01
-----------------
a script i use for wardriving.
switches wifi interface (usr arg) to
monitor mode and runs some child procs.

- stop NetworkManager, wpa_supplicant services.
- using ifconfig, iw:
	- take down wifi iface.
	- change hw addr, set monitor mode.
	- put iface back up.
- run airodump-ng & tshark.

authored by brianc2788@gmail.com
http://github.com/user5260/pyscripts/wardrive-script01
'''
import os,sys,subprocess,time
#from time import localtime()

# globs
datearg = subprocess.getoutput('date +%b%d').casefold()		# gets output from 'date' & lowercase it.
iface = None

# handle script args like a n0b.
if len(sys.argv) != 2:
	print('Usage: $> wdrive01 <interface>')
	sys.exit()
else:
	iface = sys.argv[1]

# function for running system commands.
# bPrint - true to print output, false to suppress.
def SysCmd(cmdlist, bPrint):
	cProcess = subprocess.Popen(cmdlist,shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
	if bPrint:
		output = cProcess.stdout.read().decode()		#sys.getdefaultencoding()?
		print(output)


def main():
	#lazy exception handling, for now.
	try:
		# disable network services/daemons.
		SysCmd(['service','NetworkManager','stop'],False)
		SysCmd(['service','wpa_supplicant','stop'],False)

		# change wifi interface info.
		SysCmd(['ifconfig',iface,'down'],False)
		#SysCmd(['ifconfig',iface,'hw','ether','00:11:22:33:44:55'],False)		# using macchanger to generate random hw addr.
		SysCmd(['macchanger','-a',iface],True)
		SysCmd(['iw',iface,'set','type','monitor'],False)
		SysCmd(['ifconfig',iface,'up'],False)

		# start capture utilities.
		SysCmd(['airodump-ng','--output-format','cap,csv','-w',datearg,iface],True)
	except Exception:
		# User Quit OR something fails:
		# Try to reset the interface and quit.
		if KeyboardInterrupt:
			SysCmd(['ifconfig',iface,'down'],False)
			SysCmd(['iw',iface,'set','type','managed'],False)
			SysCmd(['macchanger','-p',iface],True)
			SysCmd(['ifconfig',iface,'up'],False)
			SysCmd(['service','NetworkManager','start'],False)
			sys.quit()
		else:
			SysCmd(['service','NetworkManager','restart'],False)
			sys.quit()


if __name__ == '__main__':
	main()