#! /usr/bin/env python3
'''
sock_connect_recv
-----------------
demonstrate creation of a
network socket; some regex for
good measure. user inputs
a destination IP that must
have a service running on
port 22; preferably ssh (lol).

github.com/user5260/pyscripts/sock_connect_recv
'''
import re
import socket

# protocolRegex = re.compile(r'[ftp{3}FTP{3}http{4}HTTP{4}ssh{3}SSH{3}]')
protocolRegex = re.compile(r'[ftp|FTP|https|HTTPS|ssh|SSH|mysql|MYSQL]{1,4}')

# socket() args: AF_INET is ipv4, SOCK_STREAM is tcp.
# AF_INET6 for ipv6; SOCK_DGRAM for udp.
sock1 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
sock1.settimeout(30)

target1 = input('enter ipv4 address w/open ssh port: ')
sshport = 22

sock1.connect((target1,sshport))
serverBanner = str(sock1.recv(1024))
print('--------------------------------------------')
print('Downloaded Banner:\n'+serverBanner)
print('--------------------------------------------')
print('Protocol RegExp. results (list):\n'+str(protocolRegex.findall(serverBanner)))
